// checksum 0x9a77 version 0x20001
/*
  This file was generated by the Mobile Qt Application wizard of Qt Creator.
  MainWindow is a convenience class containing mobile device specific code
  such as screen orientation handling.
  It is recommended not to modify this file, since newer versions of Qt Creator
  may offer an updated version of it.
*/

#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QtGui/QMainWindow>
#include "common.h"
#include "networkaccess.h"

#include "wlitrack.h"
#include "ui_contextview.h"
#include "settingsdialog.h"
#include "abstractmenuwidget.h"
#include "verticalmenuwidget.h"
#include "horizontalmenuwidget.h"


#include <QKeyEvent>

#include <QListWidgetItem>
#include <QPropertyAnimation>
#include <QInputDialog>
#include <QMessageBox>
#include <QSlider>
#include <QScrollArea>
#include "commondebug.h"
#include "currentsongwidget.h"



namespace Ui {
    class MainWindow;
}

enum ListType {Album,Artist,Track,File};
enum StatusFieldShown {StatusField_Title,StatusField_Artist,StatusField_Album,StatusField_SongInfo,NR_StatusFieldShown};

class MainWindow : public QMainWindow
{
    Q_OBJECT
public:
    enum ScreenOrientation {
        ScreenOrientationLockPortrait,
        ScreenOrientationLockLandscape,
        ScreenOrientationAuto
    };

    explicit MainWindow(QWidget *parent = 0);
    virtual ~MainWindow();

    void setOrientation(ScreenOrientation orientation);
    void showExpanded();
    void keyPressEvent(QKeyEvent *);

private:
    Ui::MainWindow *ui;
    Ui_ContextView *contextview;
    CurrentSongWidget *currentsongview;
    NetworkAccess *netaccess;
    QSlider *volumeslider;
    quint8 currentstatusfield;
    QString listselection;
    QString hostname;
    QString password;
    QMenu *viewmenu;
    QScrollArea *menuscroller;
    QAction *connectacion;
    quint16 port;
    AbstractMenuWidget *menuwidget;
    void writeSettings();
    void loadSettings();
    void closeEvent(QCloseEvent *);
    void updateVolumeSlider(quint8 volume);
    QList<serverprofile> connectionprofiles;
    SettingsDialog *settingsdialogobject;
    bool searchDefaultServer();
    quint8 laststate;



public slots:
    void disconnected();
    void applySettings(QList<serverprofile>);
    void discardSettings();


protected slots:
    void updateStatusLabel(status_struct tempstruct);
    void showAbout();
    void toggleVolumeSlider();
    void changeServerVolume(int volume);
    void tryConnect();
    void tryDisconnect();
    void openSettings();
    void showFiles();
    void setMaximised(bool);
    void showMenu();
    void hideMenu();
    void showCurrentSongInfo();
    void hideCurrentSongInfo();
    void connected();


protected:
    void focusInEvent(QFocusEvent *event);
    bool event(QEvent *e);

};

#endif // MAINWINDOW_H
